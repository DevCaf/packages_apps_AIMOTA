<?xml version="1.0" encoding="UTF-8"?><!DOCTYPE language SYSTEM "language.dtd">

<language

    name="c++" author="Based on the original cpp.xml from katepart, Copyright 2006 -2007 Matias Capeletto, matias.capeletto@gmail.com" extensions="*.cpp;*.hpp;*.h" kateversion="2.4" license="Distributed under the Boost Software License, Version 1.0.
http://www.boost.org/LICENSE_1_0.txt"
    mimetype="allFiles"
    priority="9"
    section="boost::hs" version="0.1.0"

>

    <highlighting>

        <!-- Keywords lists -->

        <list name="keywords">

            <item>asm</item>
            <item>break</item>
            <item>case</item>
            <item>catch</item>
            <item>class</item>
            <item>const_cast</item>
            <item>continue</item>
            <item>default</item>
            <item>delete</item>
            <item>do</item>
            <item>dynamic_cast</item>
            <item>else</item>
            <item>enum</item>
            <item>explicit</item>
            <item>export</item>
            <item>extern</item>
            <item>false</item>
            <item>friend</item>
            <item>for</item>
            <item>goto</item>
            <item>if</item>
            <item>inline</item>
            <item>namespace</item>
            <item>new</item>
            <item>operator</item>
            <item>private</item>
            <item>protected</item>
            <item>public</item>
            <item>reinterpret_cast</item>
            <item>return</item>
            <item>sizeof</item>
            <item>static_cast</item>
            <item>struct</item>
            <item>switch</item>
            <item>template</item>
            <item>this</item>
            <item>throw</item>
            <item>true</item>
            <item>try</item>
            <item>typedef</item>
            <item>typeid</item>
            <item>type_info</item>
            <item>typename</item>
            <item>union</item>
            <item>using</item>
            <item>virtual</item>
            <item>while</item>
            <item>and</item>
            <item>and_eq</item>
            <item>bad_cast</item>
            <item>bad_typeid</item>
            <item>bitand</item>
            <item>bitor</item>
            <item>compl</item>
            <item>not</item>
            <item>not_eq</item>
            <item>or</item>
            <item>or_eq</item>
            <item>xor</item>
            <item>xor_eq</item>
            <item>except</item>
            <item>finally</item>
            <item>xalloc</item>

        </list>

        <list name="qt_extensions">

            <item>K_DCOP</item>
            <item>SLOT</item>
            <item>SIGNAL</item>
            <item>Q_CLASSINFO</item>
            <item>Q_ENUMS</item>
            <item>Q_EXPORT</item>
            <item>Q_OBJECT</item>
            <item>Q_OVERRIDE</item>
            <item>Q_PROPERTY</item>
            <item>Q_SETS</item>
            <item>TRUE</item>
            <item>FALSE</item>
            <item>connect</item>
            <item>disconnect</item>
            <item>emit</item>
            <item>signals</item>
            <item>slots</item>
            <item>foreach</item>

        </list>

        <list name="types">

            <item>auto</item>
            <item>bool</item>
            <item>char</item>
            <item>const</item>
            <item>double</item>
            <item>float</item>
            <item>int</item>
            <item>long</item>
            <item>mutable</item>
            <item>register</item>
            <item>short</item>
            <item>signed</item>
            <item>static</item>
            <item>unsigned</item>
            <item>void</item>
            <item>volatile</item>
            <item>uchar</item>
            <item>uint</item>
            <item>int8_t</item>
            <item>int16_t</item>
            <item>int32_t</item>
            <item>int64_t</item>
            <item>uint8_t</item>
            <item>uint16_t</item>
            <item>uint32_t</item>
            <item>uint64_t</item>
            <item>wchar_t</item>

        </list>

        <!-- Contexts -->

        <contexts>

            <context name="Normal" attribute="Normal Text" lineEndContext="#stay">

                <DetectSpaces />

                <IncludeRules context="boost::hs call finder" />
                <IncludeRules context="preprocessor finder" />
                <IncludeRules context="keyword finder" />
                <IncludeRules context="extensions finder" />
                <IncludeRules context="built in types finder" />
                <IncludeRules context="##std-c++" />
                <IncludeRules context="##boost" />
                <IncludeRules context="character finder" />
                <IncludeRules context="string finder" />

                <DetectIndentifier />

                <IncludeRules context="number finder" />
                <IncludeRules context="##Doxygen" />
                <IncludeRules context="quickbook_import_markup" />
                <IncludeRules context="comment finder" />
                <IncludeRules context="region finder" />
                <IncludeRules context="symbol finder" />

            </context>

            <!-- String listerals -->

            <context name="string finder" attribute="String">
                <DetectChar attribute="String" char="&quot;" context="String" />
            </context>

            <context name="String" attribute="String" lineEndContext="#pop">

                <LineContinue attribute="String" context="#stay" />
                <HlCStringChar attribute="String Char" context="#stay" />
                <DetectChar attribute="String" char="&quot;" context="#pop" />

            </context>

            <!-- Character literals -->

            <context name="character finder" attribute="Character">
                <HlCChar attribute="Char" context="#stay" />
            </context>


            <!-- built in types -->

            <context name="built in types finder" attribute="built in types">
                <keyword String="types" attribute="Data Type" context="#stay" />
            </context>

            <!-- extensions -->

            <context name="extensions finder" attribute="Extensions">
                <keyword String="qt_extensions" attribute="Extensions" context="#stay" />
            </context>

            <!-- Keywords -->

            <context name="keyword finder" attribute="Keyword">
                <keyword String="keywords" attribute="Keyword" context="#stay" />
            </context>

            <!-- Detect number literals -->

            <context name="number finder" attribute="Float">


                <Float attribute="Float" context="#stay">
                    <AnyChar String="fF" attribute="Float" context="#stay" />
                </Float>

                <HlCOct attribute="Octal" context="#stay" />

                <HlCHex attribute="Hex" context="#stay" />

                <Int attribute="Decimal" context="#stay">

                    <StringDetect String="ULL" attribute="Decimal" context="#stay"
                        insensitive="TRUE" />
                    <StringDetect String="LUL" attribute="Decimal" context="#stay"
                        insensitive="TRUE" />
                    <StringDetect String="LLU" attribute="Decimal" context="#stay"
                        insensitive="TRUE" />
                    <StringDetect String="UL" attribute="Decimal" context="#stay"
                        insensitive="TRUE" />
                    <StringDetect String="LU" attribute="Decimal" context="#stay"
                        insensitive="TRUE" />
                    <StringDetect String="LL" attribute="Decimal" context="#stay"
                        insensitive="TRUE" />
                    <StringDetect String="U" attribute="Decimal" context="#stay"
                        insensitive="TRUE" />
                    <StringDetect String="L" attribute="Decimal" context="#stay"
                        insensitive="TRUE" />

                </Int>

            </context>


            <!-- Comments -->

            <context name="comment finder" attribute="Commnet">
                <Detect2Chars attribute="Comment" char="/" char1="/" context="Commentar 1" />
                <Detect2Chars attribute="Comment" beginRegion="Comment" char="/" char1="*"
                    context="Commentar 2" />
            </context>

            <context name="Commentar 1" attribute="Comment" lineEndContext="#pop">
                <DetectSpaces />
                <IncludeRules context="##Alerts" />
                <DetectIdentifier />
            </context>

            <context name="Commentar 2" attribute="Comment" lineEndContext="#stay">
                <DetectSpaces />
                <Detect2Chars attribute="Comment" char="*" char1="/" context="#pop"
                    endRegion="Comment" />
                <IncludeRules context="##Alerts" />
                <DetectIdentifier />
            </context>

            <!-- QuickBook import markups -->

            <context name="Quickbook Commentar 1" attribute="Comment" lineEndContext="#stay">
                <DetectSpaces />
                <StringDetect String="*/" attribute="Extensions" context="#pop"
                    endRegion="Comment" />
                <IncludeRules context="##Alerts" />
                <DetectIdentifier />
            </context>

            <context name="Quickbook Commentar 2" attribute="Comment" lineEndContext="#stay">
                <DetectSpaces />
                <StringDetect String="&gt;&gt;*/" attribute="Extensions" context="#pop"
                    endRegion="Comment" />
                <IncludeRules context="##Alerts" />
                <DetectIdentifier />
            </context>

            <context name="Quickbook Commentar 3" attribute="Comment" lineEndContext="#stay">
                <DetectSpaces />
                <StringDetect String="&gt;*/" attribute="Extensions" context="#pop"
                    endRegion="Comment" />
                <IncludeRules context="##Alerts" />
                <DetectIdentifier />
            </context>

            <context name="quickbook_import_markup" attribute="Commnet">
                <RegExpr String="//\[\s*\w+" attribute="Extensions" context="Commentar 1" />
                <StringDetect String="//]" attribute="Extensions" context="Commentar 1" />
                <StringDetect String="//`" attribute="Extensions" context="Commentar 1" />
                <StringDetect String="//&lt;--" attribute="Extensions" context="Commentar 1" />
                <StringDetect String="//--&gt;" attribute="Extensions" context="Commentar 1" />
                <StringDetect String="/*`" attribute="Extensions" beginRegion="Comment"
                    context="Quickbook Commentar 1" />
                <StringDetect String="/*&lt;&lt;" attribute="Extensions"
                    beginRegion="Comment" context="Quickbook Commentar 2" />
                <StringDetect String="/*&lt;" attribute="Extensions" beginRegion="Comment"
                    context="Quickbook Commentar 3" />
            </context>


            <!-- Regions -->

            <context name="region finder" attribute="Symbol">

                <DetectChar attribute="Symbol" beginRegion="Brace1" char="{" context="#stay" />
                <DetectChar attribute="Symbol" char="}" context="#stay" endRegion="Brace1" />

            </context>

            <!-- Other reserved symbols -->

            <context name="symbol finder" attribute="Symbol">

                <AnyChar String=":!%&amp;()+,-/.*&lt;=&gt;?[]{|}~^&#59;" attribute="Symbol"
                    context="#stay" />

            </context>

            <!-- Preprocessor -->

            <context name="preprocessor finder" attribute="Preprocessor">

                <!-- ifdef/ifndef region markers -->

                <RegExpr String="#\s*if\s+0" attribute="Preprocessor" beginRegion="Outscoped"
                    context="Outscoped" firstNonSpace="true" />

                <!-- Enter the preprocessor -->

                <DetectChar attribute="Preprocessor" char="#" context="Preprocessor"
                    firstNonSpace="true" />

            </context>

            <context name="Preprocessor" attribute="Preprocessor" lineEndContext="#pop">

                <LineContinue attribute="Preprocessor" context="#stay" />
                <RegExpr String="define.*((?=\\))" attribute="Preprocessor" context="Define" />
                <RegExpr String="define.*" attribute="Preprocessor" context="#stay" />
                <RangeDetect attribute="Prep. Lib" char="&quot;" char1="&quot;" context="#stay" />
                <RangeDetect attribute="Prep. Lib" char="&lt;" char1="&gt;" context="#stay" />
                <IncludeRules context="##Doxygen" />
                <IncludeRules context="quickbook_import_markup" />
                <Detect2Chars attribute="Comment" char="/" char1="/" context="Commentar 1" />
                <Detect2Chars attribute="Comment" char="/" char1="*"
                    context="Commentar/Preprocessor" />

            </context>

            <context name="Define" attribute="Preprocessor" lineEndContext="#pop">
                <LineContinue attribute="Preprocessor" context="#stay" />
            </context>

            <context name="Commentar/Preprocessor" attribute="Comment" lineEndContext="#stay">
                <DetectSpaces />
                <Detect2Chars attribute="Comment" char="*" char1="/" context="#pop" />
                <DetectIdentifier />
            </context>

            <context name="Outscoped" attribute="Comment" lineEndContext="#stay">
                <DetectSpaces />
                <IncludeRules context="##Alerts" />
                <DetectIdentifier />
                <DetectChar attribute="String" char="&quot;" context="String" />
                <IncludeRules context="##Doxygen" />
                <IncludeRules context="quickbook_import_markup" />
                <Detect2Chars attribute="Comment" char="/" char1="/" context="Commentar 1" />
                <Detect2Chars attribute="Comment" beginRegion="Comment" char="/" char1="*"
                    context="Commentar 2" />
                <RegExpr String="#\s*if" attribute="Comment" beginRegion="Outscoped"
                    context="Outscoped intern" firstNonSpace="true" />
                <RegExpr String="#\s*(endif|else|elif)" attribute="Preprocessor" context="#pop"
                    endRegion="Outscoped" firstNonSpace="true" />
            </context>

            <context name="Outscoped intern" attribute="Comment" lineEndContext="#stay">

                <DetectSpaces />
                <IncludeRules context="##Alerts" />
                <DetectIdentifier />
                <DetectChar attribute="String" char="&quot;" context="String" />
                <IncludeRules context="##Doxygen" />
                <IncludeRules context="quickbook_import_markup" />
                <Detect2Chars attribute="Comment" char="/" char1="/" context="Commentar 1" />
                <Detect2Chars attribute="Comment" beginRegion="Comment" char="/" char1="*"
                    context="Commentar 2" />
                <RegExpr String="#\s*if" attribute="Comment" beginRegion="Outscoped"
                    context="Outscoped intern" firstNonSpace="true" />
                <RegExpr String="#\s*endif" attribute="Comment" context="#pop" endRegion="Outscoped"
                    firstNonSpace="true" />

            </context>


            <!-- boost::hs -->

            <context name="boost::hs skip line" attribute="Comment" lineEndContext="#pop">

            </context>


            <context name="boost::hs skip line and pop pop" attribute="Comment"
                lineEndContext="#pop#pop">

            </context>


            <context name="boost::hs has gone off" attribute="Comment"
                lineEndContext="boost::hs is off">

            </context>


            <context name="boost::hs call finder" attribute="Comment">

                <StringDetect String="//boost::hs::begin_region()" attribute="boost::hs"
                    beginRegion="boost::hs::Region" context="boost::hs skip line"
                    firstNonSpace="true" />
                <StringDetect String="//boost::hs::end_region()" attribute="boost::hs"
                    context="boost::hs skip line" endRegion="boost::hs::Region"
                    firstNonSpace="true" />

                <StringDetect String="//boost::hs::turn_off()" attribute="boost::hs"
                    beginRegion="boost::hs::ScapedRegion" context="boost::hs has gone off"
                    firstNonSpace="true" />
                <StringDetect String="//boost::hs::turn_on()" attribute="boost::hs"
                    context="boost::hs skip line" firstNonSpace="true" />

            </context>

            <context name="boost::hs is off" attribute="Normal Text">

                <StringDetect String="//boost::hs::turn_off()" attribute="boost::hs"
                    context="boost::hs skip line and pop pop" endRegion="boost::hs::ScapedRegion"
                    firstNonSpace="true" />
                <StringDetect String="//boost::hs::turn_on()" attribute="boost::hs" context="#stay"
                    firstNonSpace="true" />

            </context>


        </contexts>

        <itemDatas>

            <itemData name="Normal Text" defStyleNum="dsNormal" />
            <itemData name="Keyword" defStyleNum="dsKeyword" />
            <itemData name="Extensions" bold="1" color="#0095ff" defStyleNum="dsKeyword"
                italic="0" selColor="#ffffff" />
            <itemData name="Data Type" defStyleNum="dsDataType" />
            <itemData name="Decimal" defStyleNum="dsDecVal" />
            <itemData name="Octal" defStyleNum="dsBaseN" />
            <itemData name="Hex" defStyleNum="dsBaseN" />
            <itemData name="Float" defStyleNum="dsFloat" />
            <itemData name="Char" defStyleNum="dsChar" />
            <itemData name="String" defStyleNum="dsString" />
            <itemData name="String Char" defStyleNum="dsChar" />
            <itemData name="Comment" defStyleNum="dsComment" />
            <itemData name="Symbol" defStyleNum="dsNormal" />
            <itemData name="Preprocessor" defStyleNum="dsOthers" />
            <itemData name="Prep. Lib" defStyleNum="dsOthers" />
            <itemData name="boost::hs" defStyleNum="dsOthers" />

        </itemDatas>

    </highlighting>

    <general>

        <comments>

            <comment name="singleLine" start="//" />
            <comment name="multiLine" end="*/" region="Comment" start="/*" />

        </comments>

        <keywords casesensitive="1" />

    </general>

</language>


    <!--

    Aknowelegments
    =================================================

    Version history
    =================================================

    [ 0.1.0 ] Initial beta.

    Known bugs
    =================================================

    -->